name: Packaging Harmonic Mean
# run-name: ${{ github.actor }} is learning GitHub Actions
on:
  - push
jobs:
  format:
    name: Format
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Python 3.10
        uses: actions/setup-python@v4.0.0
        with:
          python-version: "3.10"
      - name: Install tox
        run: python -m pip install tox
      - name: Run black
        run: tox -e format
  lint:
    name: Lint
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Python 3.10
        uses: actions/setup-python@v4.0.0
        with:
          python-version: "3.10"
      - name: Install tox
        run: python -m pip install tox
      - name: Run flake8
        run: tox -e lint
  typecheck:
    name: Typecheck
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Python 3.10
        uses: actions/setup-python@v4.0.0
        with:
          python-version: "3.10"
      - name: Install tox
        run: python -m pip install tox
      - name: Run mypy
        run: tox -e typecheck
  test:
    name: Test
    runs-on: macos-latest
    strategy:
      matrix:
        python:
          - version: "3.10"
            toxenv: "py310"
          - version: "3.11"
            toxenv: "py311"
    steps:
      - name: Check out the code to be tested
        uses: actions/checkout@v3
      - name: Check out Python ${{ matrix.python.version }}
        uses: actions/setup-python@v4.0.0
        with:
          python-version: ${{ matrix.python.version }}
      - name: Install tox
        run:  python -m pip install tox
      - name: Run pytest
        run:  tox -e ${{ matrix.python.toxenv }}
  build_bdists:
    name: Build bdists
    runs-on: ${{ matrix.os.version }}
    strategy:
      matrix:
        os:
          # - version: ubuntu-20.04
          # - version: windows-2019
          - version: macOS-12
        python:
          - version: "3.10"
          - version: "3.11"
    steps:
      - name: Check out the source code
        uses: actions/checkout@v3
      - name: Check out Python ${{ matrix.python.version }}
        uses: actions/setup-python@v4.0.0
        with:
          python-version: ${{ matrix.python.version }}
      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel
      - name: Run cibuildwheel and store the output files in wheels/
        run: python -m cibuildwheel --output-dir wheels
      - name: Upload the wheels
        uses: actions/upload-artifact@v3
        with:
          path: ./wheels/*.whl


  # test-color-accessibility:
  #   name: Color a11y
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       text-color:
  #         - value: "#000000"
  #         - value: "#33a5f3"
  #       background-color:
  #         - value: "#336633"
  #         - value: "#989a5f"
  #       standard:
  #         - name: "WCAG"
  #           level: "AA"
  #         - name: "WCAG"
  #           level: "AAA"
  #   steps:
  #     - name: Check accessibility!
  #       run: |
  #         echo Checking ${{ matrix.text-color.value }} ${{ matrix.background-color.value }} ${{ matrix.standard.name }} ${{ matrix.standard.level }}
